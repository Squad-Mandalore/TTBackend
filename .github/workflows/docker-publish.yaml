name: Docker

on:
  pull_request:
    branches: [ "dev", "master" ]
  push:
    # Publish semver tags as releases.
    tags: [ 'v[0-9]+.[0-9]+.[0-9]+' ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  CARGO_TERM_COLOR: always
  DATABASE_URL: postgres://postgres:password@localhost:5432/time_tracker
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  PEPPER: ${{ secrets.PEPPER }}
  SALT_LENGTH: ${{ secrets.SALT_LENGTH }}
  KEYCHAIN_NUMBER: ${{ secrets.KEYCHAIN_NUMBER }}

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - uses: Swatinem/rust-cache@v2
        with:
          key: ttbackend

      - name: Get SQLx-ClI
        run: cargo install sqlx-cli

      - name: Setup
        run: sqlx db setup

      - name: Build
        run: cargo build --release --verbose

      - uses: actions/upload-artifact@v4
        with:
          name: build-${{ github.sha }}
          path: target
          retention-days: 1

      - name: Test
        run: cargo test --no-fail-fast --verbose

  build_image:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.6.0

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.6.1

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - uses: actions/download-artifact@v4
        with:
          name: build-${{ github.sha }}
          path: target

      - run: chmod +x ./target/release/ttbackend

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6.7.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max


      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

  deploy:
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    needs: build_image

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .env
        run: |
          echo 'POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}' >> .env
          echo 'JWT_SECRET=${{ secrets.JWT_SECRET }}' >> .env

      - name: Setup known_hosts
        run: |
          ls -la ~/
          mkdir -p ~/.ssh
          echo '${{ secrets.KNOWN_HOSTS }}' >> ~/.ssh/known_hosts

      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy
        run: docker --host ssh://${{ secrets.SSH_USER }}@${{ secrets.SSH_HOSTNAME }} compose up -d

