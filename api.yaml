openapi: 3.1.0
info:
  title: Time Tracking API
  description: API of the Time Tracking Service for Schmidt's Handwerksbetrieb
  version: 0.1.3
  contact:
    name: Squad Mandalore
    url: https://github.com/Squad-Mandalore

tags:
  - name: auth
  - name: resource

servers:
  - url: https://magenta.jetzt/ttapi
    description: Production
  - url: http://localhost:3000
    description: Debug

paths:
  /login:
    post:
      tags:
        - auth
      operationId: postLogin
      description: Uses Email and Password to Authenticate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
  /refresh:
    post:
      tags:
        - auth
      operationId: postRefresh
      description: Refresh expired access token with a valid refresh token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
              required:
                - refreshToken
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
  /graphql:
    post:
      tags:
        - resource
      operationId: postGraphql
      description: Endpoint for the GraphQL Queries
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GraphQLQuery'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphQLResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    UnauthorizedError:
      headers:
        WWW-Authenticate:
          schema:
            type: string
      description: Access token is missing or invalid
  schemas:
    Login:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
      required:
        - email
        - password
    Token:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
      required:
        - accessToken
        - refreshToken
    GraphQLQuery:
      type: object
      properties:
        query:
          type: string
        variables:
          type: object
      required:
        - query
    GraphQLResponse:
      type: object
      properties:
        data:
          type:
            - object
            - 'null'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/GraphQLError'
      required:
        - data
    GraphQLError:
      type: object
      properties:
        message:
          type: string
        location:
          type: array
          items:
            type: object
            properties:
              line:
                type: integer
              column:
                type: integer
            required:
              - line
              - column
        path:
          type: array
          items:
            type: string
        extensions:
          type: object
      required:
        - message
        - location
